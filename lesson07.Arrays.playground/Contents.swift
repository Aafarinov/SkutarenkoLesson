// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -     ARRAYS      -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -


/*                                                          ТЕОРИЯ

// Массив - это тип коллекции,которая может содержать элементы принадлежащие ТОЛЬКО к одному типу.
// Элементы внутри массива находятся в том порядке, в котором мы их туда поместили
// Массив это VAlUE TYPE!!!
//

//                                         доказательство того, что массив это VALUE TYPE

var array002 = ["z", "x", "s", "g", "y", "r"]
var array003 = array002

array002
array003

array002[0] = "1" // доступ к элементу по индексу

array002 // поменяли значение в старом элементе (с него копировали значение)
array003 // в новом массиве ничего не поменялось


*/




// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -



//                                               Cкутаренко - форма записи:


/*
let array1 : Array<String> = ["a", "b", "c", "d"]
let array2 : [String] = ["a", "b", "c", "d"]
let array3 = ["a", "b", "c", "d"]    // самая распространенная форма записи
*/

//                                                 Акулов - форма записи:
/*
 // форма записи: различные, но минимум три!
 let arrayOne = Array<Int>()
 let arrayTwo = [Int]()
 var arrayThree : [Int] = []  // самая распространенная форма записи

// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -

 
 
//                                           Акулов - повторение цифры несколько раз:
 
 let arrayFour = [1, 2, 3, 4]
 let arrayFive = [Int](repeating: 10, count: 6) // цифра десять повторилась 6 раз!
 
 
 
 // -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
 
 //                                             переворачивание элементов массива
 
 arrayThree.reverse()
 arrayThree

 // -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
 

 //                                      Акулов - определение колличества элементов в массиве
 
 var arrayThree : [Int] = []
 arrayThree.count - 1 // count определяет колличество элементов в массиве
 


 
 //                                   Cкутаренко -  определение колличества элементов в массиве

/*
let constArray = ["a", "b", "c", "d"]
constArray.count - 1 // count определяет колличество элементов в массиве
var array = [String]()

if array.count == 0 {
    print("array is empty")
}
// более короткая форма записи
if array.isEmpty {
    print("array is empty")
}
*/

 // -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -


 
//                                       Акулов -    основные действия с массивами

/*
var constArray01 = ["a", "b", "c", "d"]
var array01 = [String]()
array01 += constArray01

 
 
 //                                         Cкутаренко - основные действия с массивами
 
 arrayThree += arrayFive // присвоили третьему (пустому массиву) значение пятого
 arrayThree // смотрим что получилось
 
 arrayFour[2]
 arrayThree[1...3] = [15]
 arrayThree
 

 
// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -


//                                         Cкутаренко -  добавление элементов в массив

// array01 += "c"   -   мы не можем добавлять так один или несколько элементов. К массиву нужно добавлять только массив
array01 += ["e"]
array01.append("f") // по умолчанию элемент добавляется в конец массива
array01.insert("-", at: 3) // добавляем конкретный элемент МЕЖДУ... на конкретное место!
array01[0] = "5"          // добавляем конкретный элемент ВМЕСТО... на конкретное место!
array01


 
 //                                          Акулов -  добавление элементов в массив
 
 arrayThree.append(100) // по умолчанию элемент добавляется в конец массива
 arrayThree.insert(105, at: 2) // добавляем на конкретное место
 

 // -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -

 
 
 
//                                       Cкутаренко -  удаление элементов из массива

array01                  //  ["5", "b", "c", "-", "d", "e", "f"]
array01.remove(at: 1)    //  "b"
array01.removeLast()     //  "f"
array01.removeFirst()    //  "5"
array01                  //  ["c", "-", "d", "e"]


 //                                       Акулов -  уделение элементов из массива
 
 arrayThree.remove(at: 4)
 arrayThree
 
 arrayThree.removeFirst()
 arrayThree
 
 arrayThree.removeLast()
 arrayThree

 
 // -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -

 
 //                                     Акулов - использование удаленного значения массива
 
 // arrayThree.removeLast()  -  удалили цифру сто из массива, но если объявить ее в качестве константы/переменной, то можно использовать ее значение где-то позже
 let deletedValue = arrayThree.removeLast()
 deletedValue // распечатали константу и получили значение
 
 */

 
 
 // -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -

 

 //                                        Cкутаренко -    доступ к элементу по индексу
 
 array002[1...4] = ["0"] // поменяли кусок массива на 0
 //array002[1..<4] = ["0"] // поменяли кусок массива! Обратить внимание на знак "ДО 4"
 // array002[0] = "1" // замена одного элемента, не требует скобок
 
 array002
 */

 

 
 
// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -




//                                          Cкутаренко - пример с деньгами


/*
let money = [100, 1, 5, 20, 1, 50, 1, 1, 20]
var sum = 0


 // вариант 1 - не очень хороший

for i in 0 ..< 9 {     // тут девятка ломает всю картину - если добавляем элемент в массив - нужно переписывать и девятку руками
    print("i = \(i)")
    sum += money[i]
}
sum                    //   сумма 199
 
 // это не очень хороший пример: добавить массив не можем, нужно все постоянно изменять - код не гибкий
 */



/*
//вариант 2 - лучьше, чем первый вариант. ВЫВОДИТ ИНДЕКСЫ
 
 for i in 0 ..< money.count {    // "money.count" стоит вместо девятки
 print("i = \(i)")
 sum += money[i]
 }
 sum                    // сумма  199
 //это не очень хороший пример: добавить массив не можем, нужно все постоянно изменять - код не гибкий
*/


/*
 //вариант 2+   -  альтернативный, если нужно ИНДЕКСЫ + ЗНАЧЕНИЯ!!!

for i in 0 ..< money.count {
    print("index = \(i) value = \(money[i])")
    sum += money[i]
}
sum                    // сумма  199
*/


/*
// вариант 3 - высшая математика! Нет цифр - одни буквы!!! ВЫВОДИТ ЗНАЧЕНИЯ НАПРЯМУЮ БЕЗ ИНДЕКСА

for i in money {
 print("i = \(i)")
    sum += i
}
sum                    // сумма  199
*/


/*
 // вариант 3+   - высшая математика! Нет цифр - одни буквы!!! ИНДЕКСЫ + ЗНАЧЕНИЯ!!!

var index = 0
 for value in money {
 print("index = \(index) value = \(value)")
 sum += value
    index += 1
    
 }
 sum                    // сумма  199
*/


// вариант 3++   - высшая математика! Нет цифр - одни буквы!!! ИНДЕКСЫ + ЗНАЧЕНИЯ!!!
/*
for (index, value) in money.enumerated() {
    print("index = \(index) value = \(value)")
    sum += value
    
}
sum                    // сумма  199

*/

// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -






//-------------------------------------------------------------------------------------------------------------------------------

//                                                     ТЕХНИЧЕСКОЕ ЗАДАНИЕ

/*
 1. создать массив "дни в месяцах"
 12 элементов содержащих количество дней в соответствующем месяце
 
 используя цикл for и этот массив
 
 - выведите количество дней в каждом месяце (без имен месяцев)
 - используйте еще один массив с именами месяцев чтобы вывести название месяца + количество дней
 - сделайте тоже самое, но используя массив тюплов с параметрами (имя месяца, кол-во дней)
 - сделайте тоже самое, только выводите дни в обратном порядке (порядок в массиве не меняется)
 
 - для произвольно выбранной даты (месяц и день) посчитайте количество дней до этой даты от начала года
 
 2. Сделайте первое задание к уроку номер 4 используя массивы:
 
 (создайте массив опшинал интов и посчитайте сумму)
 
 - в одном случае используйте optional binding
 - в другом forced unwrapping
 - а в третьем оператор ??
 
 3. создайте строку алфавит и пустой массив строк
 
 в цикле пройдитесь по всем символам строки попорядку, преобразовывайте каждый в строку и добавляйте в массив, причем так, чтобы на выходе получился массив с алфавитом задом-наперед
 37:38
 
 */
//--------------------------------------------------------------------------------------------------------------------------------


//                                                     ВЫПОЛНЕНИЕ ЗАДАНИЯ// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
 // -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -


/*
1. создать массив "дни в месяцах"
12 элементов содержащих количество дней в соответствующем месяце
*/


// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -






// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
